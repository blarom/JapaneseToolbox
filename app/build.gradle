apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion '28.0.2'

    defaultConfig {
        applicationId "com.japanesetoolboxapp"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 53
        versionName "2.57"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        // the following code makes the app only available to relevant phones, thereby reducing the apk size
        // See https://android.jlelse.eu/controlling-apk-size-when-using-native-libraries-45c6c0e5b70a
//        ndk {
//
//            abiFilters "armeabi-v7a", "x86"
//        }

        buildConfigField("String", "firebaseEmail", firebaseEmail)
        buildConfigField("String", "firebasePass", firebasePass)
    }
    signingConfigs {
        release {
            storePassword "default"
            keyAlias "default"
            keyPassword "default"
            storeFile file("C:/Projects/Workspace/Keystore/japanesetoolboxapp.jks")
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
        }
    }
}

//Signing gitignore method inspired by: https://gist.github.com/SleeplessByte/89c90f702c0f2fdc2b12
File signingPropertiesFile = file("C:/Projects/Workspace/Keystore/signing.properties")
if (signingPropertiesFile.exists()) {
    Properties properties = new Properties()
    properties.load(new FileInputStream(signingPropertiesFile))

    if (properties.containsKey('STORE_PASSWORD') && properties.containsKey('KEY_ALIAS') && properties.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.config.storePassword = properties['STORE_PASSWORD']
        android.signingConfigs.config.keyAlias = properties['KEY_ALIAS']
        android.signingConfigs.config.keyPassword = properties['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
    android.buildTypes.release.signingConfig = null
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //Android
    def android_components_version = "27.1.1"
    implementation "com.android.support:support-v4:$android_components_version"
    implementation "com.android.support:appcompat-v7:$android_components_version"
    implementation "com.android.support:preference-v7:$android_components_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    //Android extensions
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation 'com.google.firebase:firebase-core:16.0.5'
    implementation 'com.google.firebase:firebase-database:16.0.5'
    implementation 'com.google.firebase:firebase-auth:16.0.5'

    //3rd-party libraries
    implementation 'com.rmtheis:tess-two:8.0.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.7.+'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    def room_version = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
    implementation 'com.github.livefront:bridge:v1.1.2'
    implementation 'frankiesardo:icepick:3.2.0'
    annotationProcessor 'frankiesardo:icepick-processor:3.2.0'
}

apply plugin: 'com.google.gms.google-services'
